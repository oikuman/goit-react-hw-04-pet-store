{"version":3,"sources":["components/PetsPage/PetsPage.module.css","components/AboutPage/AboutPage.module.css","components/PetPage/PetPage.module.css","components/HomePage/HomePage.module.css","components/HomePage/HomePage.js","components/AboutPage/AboutPage.js","components/PetsPage/PetsPage.js","components/PetPage/PetPage.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","className","css","greeting","AboutPage","about","title","text","PetsPage","props","pets","list","map","elem","key","id","item","to","pathname","state","from","image","src","alt","name","nameTitle","PetPage","handleBack","e","history","location","goBack","push","this","match","params","pet","find","age","breed","color","description","gender","Button","variant","button","onClick","width","Component","App","path","exact","component","render","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sIACAA,EAAOC,QAAU,CAAC,MAAQ,wBAAwB,KAAO,uBAAuB,KAAO,uBAAuB,MAAQ,wBAAwB,UAAY,4BAA4B,KAAO,yB,mBCA7LD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,MAAQ,yBAAyB,KAAO,0B,u5MCA3FD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,6B,kNCUdC,EARE,WACf,OACE,yBAAKC,UAAWC,IAAIC,UAClB,8D,iBC0BSC,EA7BG,kBAChB,yBAAKH,UAAWC,IAAIG,OAClB,wBAAIJ,UAAWC,IAAII,OAAnB,sBACA,uBAAGL,UAAWC,IAAIK,MAAlB,2NAKA,oQAMA,uQAMA,qQ,iBCOWC,EA1BE,SAAAC,GAAU,IACjBC,EAASD,EAATC,KAER,OACE,6BACE,wBAAIT,UAAWC,IAAII,OAAnB,kBACA,wBAAIL,UAAWC,IAAIS,MAChBD,EAAKE,KAAI,SAAAC,GAAI,OACZ,wBAAIC,IAAKD,EAAKE,GAAId,UAAWC,IAAIc,MAC/B,kBAAC,IAAD,CACEC,GAAI,CACFC,SAAS,SAAD,OAAWL,EAAKE,IACxBI,MAAO,CAAEC,KAAM,WAGjB,yBAAKnB,UAAWC,IAAImB,MAAOC,IAAKT,EAAKQ,MAAOE,IAAKV,EAAKW,OACtD,0BAAMvB,UAAWC,IAAIuB,WAArB,aACA,0BAAMxB,UAAWC,IAAIsB,MAAOX,EAAKW,c,iECmBhCE,E,2MAnCbC,WAAa,SAAAC,GAAM,IACTC,EAAY,EAAKpB,MAAjBoB,QACU,EAAKpB,MAAMqB,SAArBX,OACGU,EAAQE,SACnBF,EAAQG,KAAK,CAAEd,SAAU,W,wEAGjB,IACAR,EAASuB,KAAKxB,MAAdC,KACAK,EAAOkB,KAAKxB,MAAMyB,MAAMC,OAAxBpB,GACFqB,EAAM1B,EAAK2B,MAAK,SAAAxB,GAAI,OAAIA,EAAKE,KAAOA,KAClCuB,EAAwDF,EAAxDE,IAAKC,EAAmDH,EAAnDG,MAAOC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,YAAaC,EAAwBN,EAAxBM,OAAQrB,EAAgBe,EAAhBf,MAAOG,EAASY,EAATZ,KAEvD,OACE,6BACE,kBAACmB,EAAA,EAAD,CACEC,QAAQ,YACRJ,MAAM,UACNvC,UAAWC,IAAI2C,OACfC,QAASb,KAAKN,YAJhB,UAQA,wCAAcH,GACd,yBAAKF,IAAKD,EAAOE,IAAKC,EAAMvB,UAAWC,IAAImB,MAAO0B,MAAM,QACxD,mCAAST,GACT,sCAAYI,GACZ,qCAAWF,GACX,qCAAWD,GACX,2BAAIE,Q,GA9BUO,aCsCPC,MAjCf,WACE,OACE,yBAAKhD,UAAU,OACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,WACZ,wBAAIA,UAAU,WACZ,kBAAC,IAAD,CAAMgB,GAAG,KAAT,SAEF,wBAAIhB,UAAU,WACZ,kBAAC,IAAD,CAAMgB,GAAG,SAAT,SAEF,wBAAIhB,UAAU,WACZ,kBAAC,IAAD,CAAMgB,GAAG,UAAT,YAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiC,KAAK,IAAIC,OAAK,EAACC,UAAWpD,IACjC,kBAAC,IAAD,CAAOkD,KAAK,SAASE,UAAWhD,IAChC,kBAAC,IAAD,CACE8C,KAAK,YACLG,OAAQ,SAAA5C,GAAK,OAAI,kBAAC,EAAD,iBAAaA,EAAb,CAAoBC,KAAMA,QAE7C,kBAAC,IAAD,CACEwC,KAAK,QACLG,OAAQ,SAAA5C,GAAK,OAAI,kBAAC,EAAD,iBAAcA,EAAd,CAAqBC,KAAMA,QAE9C,kBAAC,IAAD,CAAUO,GAAG,SCxBDqC,QACW,cAA7BC,OAAOzB,SAAS0B,UAEe,UAA7BD,OAAOzB,SAAS0B,UAEhBD,OAAOzB,SAAS0B,SAAStB,MACvB,2DCXNuB,IAASJ,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFK,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.57a01238.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"PetsPage_title__1_ZeI\",\"list\":\"PetsPage_list__1XxF3\",\"item\":\"PetsPage_item__1Dtiw\",\"image\":\"PetsPage_image__2YUbW\",\"nameTitle\":\"PetsPage_nameTitle__2xgXw\",\"name\":\"PetsPage_name__1jiUe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"about\":\"AboutPage_about__1tFnN\",\"title\":\"AboutPage_title__2Fq32\",\"text\":\"AboutPage_text__OO_P1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"PetPage_button__16Tw4\",\"image\":\"PetPage_image__2Jda3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"HomePage_greeting__1U27v\"};","import React from 'react';\nimport css from './HomePage.module.css';\n\nconst HomePage = () => {\n  return (\n    <div className={css.greeting}>\n      <h2>Welcome to Paws online store</h2>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport css from './AboutPage.module.css';\n\nconst AboutPage = () => (\n  <div className={css.about}>\n    <h2 className={css.title}>Fun facts about us</h2>\n    <p className={css.text}>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Est nam cumque\n      expedita omnis minus quidem obcaecati accusamus et accusantium facilis\n      illo, aliquid modi possimus beatae voluptate voluptas maiores sint quia.\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet consectetur, adipisicing elit. Saepe eveniet\n      voluptates alias enim officia minus, impedit architecto quo atque ullam\n      consectetur? Id necessitatibus placeat incidunt quod odit, inventore\n      aliquam nostrum!\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Sit libero\n      dolores enim, tempore reiciendis quam dignissimos ratione natus officia\n      tenetur autem eveniet molestias perferendis dolor doloremque voluptas,\n      esse eos accusantium!\n    </p>\n    <p>\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis dolorem\n      inventore ipsam maiores architecto enim nihil, corporis perferendis atque\n      dignissimos quae velit officia. Quas aliquid praesentium optio aliquam\n      quos debitis!\n    </p>\n  </div>\n);\n\nexport default AboutPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport css from './PetsPage.module.css';\n\nconst PetsPage = props => {\n  const { pets } = props;\n\n  return (\n    <div>\n      <h2 className={css.title}>Available pets</h2>\n      <ul className={css.list}>\n        {pets.map(elem => (\n          <li key={elem.id} className={css.item}>\n            <Link\n              to={{\n                pathname: `/pets/${elem.id}`,\n                state: { from: '/pets' },\n              }}\n            >\n              <img className={css.image} src={elem.image} alt={elem.name}></img>\n              <span className={css.nameTitle}>Name:&nbsp;</span>\n              <span className={css.name}>{elem.name}</span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PetsPage;\n","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport css from './PetPage.module.css';\n\nclass PetPage extends Component {\n  handleBack = e => {\n    const { history } = this.props;\n    const { state } = this.props.location;\n    if (state) history.goBack();\n    history.push({ pathname: '/pets' });\n  };\n\n  render() {\n    const { pets } = this.props;\n    const { id } = this.props.match.params;\n    const pet = pets.find(elem => elem.id === id);\n    const { age, breed, color, description, gender, image, name } = pet;\n\n    return (\n      <div>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className={css.button}\n          onClick={this.handleBack}\n        >\n          Return\n        </Button>\n        <p>All about {name}</p>\n        <img src={image} alt={name} className={css.image} width=\"600\"></img>\n        <p>Age: {age}</p>\n        <p>Gender: {gender}</p>\n        <p>Color: {color}</p>\n        <p>Breed: {breed}</p>\n        <p>{description}</p>\n      </div>\n    );\n  }\n}\n\nexport default PetPage;\n","import React from 'react';\nimport { Switch, Route, Link, Redirect } from 'react-router-dom';\nimport './App.css';\nimport pets from './pets.json';\nimport HomePage from './HomePage';\nimport AboutPage from './AboutPage';\nimport PetsPage from './PetsPage';\nimport PetPage from './PetPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <nav className=\"navBar\">\n        <ul className=\"navList\">\n          <li className=\"navItem\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"navItem\">\n            <Link to=\"/pets\">Pets</Link>\n          </li>\n          <li className=\"navItem\">\n            <Link to=\"/about\">About</Link>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/about\" component={AboutPage} />\n        <Route\n          path=\"/pets/:id\"\n          render={props => <PetPage {...props} pets={pets} />}\n        />\n        <Route\n          path=\"/pets\"\n          render={props => <PetsPage {...props} pets={pets} />}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}